# All of these fields are optional, as is this file itself,
#   in which case these values can be managed in the UI.

# The name of the extension.
project_name: "Maze Viewer"

# A short tagline to show in search.
tagline: "A dynamically-generated simple maze UI."

# A longer explanation. Supports Markdown format.
creator_notes: "Just a simple maze."

# 'PUBLIC', 'PRIVATE', or 'UNLISTED'.
visibility: 'UNLISTED'

# 'ADJACENT' or 'NONE'
# 'ADJACENT' is default. The frame will display on the side of the
#   chat on desktop and above/in the top half of the chat on mobile.
# 'NONE' will not display, only run.
position: 'COVER'

# Self-explanatory.
tags:
  - 'Extension'
  - 'Maze'

# Whether this REQUIRES a user-given configuration,
#   versus being able to handle nulls/default values.
needs_config: false
# The schema of any user-supplied config.
# If your extension requires a configuration but has no
#   defined schema, it won't work.
# Config schemas are a superset of JSON Schema format
# @link https://json-schema.org
config_schema:
  type: object
  title: Maze Configuration
  description: Settings for the maze extension.
  properties:
    size:
      title: "Maze Size"
      description: "The number of tiles wide (and tall) the maze is. You start in the center."
      type: integer
      minimum: 3
      maximum: 60
      default: 15
      multipleOf: 3
    imagePromptPrefix:
      type: string
      maxLength: 400
      title: "Image Prompt Prefix"
      description: "Experimental, may do nothing. A prefix to use for generated images."
      default: "Highest quality, 8K, digital art, "
  required:
    - size
    - imagePromptPrefix

# Whether this is state-based in a history-sensitive way,
#   rather than being able to work with latest-only data.
# For example, this extension isn't history-based,
#   as if it's added to an existing chat it will just
#   display the 'neutral' expression until someone talks.
# Think like inventory management may need a full history.
needs_history: true
# The schema of the state that you store.
# This isn't needed even if you do store state,
#   and is here more for future use cases.
state_schema:

# Whether to publish as 'Anonymous' instead of under your username.
is_anonymous: false

# Self-explanatory.
ratings_disabled: false

# This is here for future cases where ex. you need user secrets,
#    but currently does nothing.
permissions:

github_path: 'https://github.com/CharHubAI/stage-testing'
